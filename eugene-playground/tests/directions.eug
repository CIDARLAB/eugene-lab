/* define some properties */

Property prop1(txt);
Property prop2(txt);
Property prop3(txt);
Property prop4(txt);

/* define some part types */
PartType P1(prop1);
PartType P2(prop1, prop2);
PartType P3(prop1, prop2, prop3);
PartType P4(prop1, prop2, prop3, prop4);

/* define some parts */
P1 p1_1(.prop1("A"));
P1 p1_2(.prop1("T"));
P1 p1_3(.prop1("C"));
P1 p1_4(.prop1("G"));

P2 p2_1(.prop1("A"));
P2 p2_2(.prop1("T"));
P2 p2_3(.prop1("C"));
P2 p2_4(.prop1("G"));

P3 p3_1(.prop1("A"));
P3 p3_2(.prop1("T"));
P3 p3_3(.prop1("C"));
P3 p3_4(.prop1("G"));

P3 p4_1(.prop1("A"));
P3 p4_2(.prop1("T"));
P3 p4_3(.prop1("C"));
P3 p4_4(.prop1("G"));

/** DIRECTIONS ON PART TYPES **/
Device D1(-P1);     // every part of part type P1 is reversed in device D1
Device D2(P1, P2);  // every part of part type P1 and part type P2 has a forward direction in device D2
Device D3(-P1, -P2, -P3);
                    // every part of part type P1, P2, and P3 has a reverse direction in device D3 and

Device D4(-P1, P2, -P3, P4);

println(D1);
println(D2);
println(D3);
println(D4);
                                        
/** DIRECTIONS ON PARTS **/
Device D5(-p1_1);
Device D6(p1_1, -p2_1);
Device D7(p1_1, -p2_1, p3_1);

println(D5);
println(D6);
println(D7);

/** DIRECTIONS ON DEVICES **/
Device D8(P1, P2, P3, P4);
Device D9(-D8, P1, D8);
Device D10(-D9);

println(D9);     // -D8, P1, D8
println(D10);    // -D9

// TEST:
// getDirectionsAtDepth
// getComponentsAtDepth
