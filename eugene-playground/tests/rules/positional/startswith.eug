include "./tests/rules/design-space.h"

/**
Device D(P1);

// rules
Rule r1(
	ON D:
		D STARTSWITH p1_1);
 **/

/**
Rule r1(
	ON D:
		NOT (D STARTSWITH p1_1));

 **/

/**
Device D(P1, P2);
Rule r1(
	ON D:
		D STARTSWITH p1_2);
 **/
/**
Device D(P1, P2, P3, P4, P5);
Rule r1(
	ON D:
		D STARTSWITH p1_1);
 **/
 
/** 
Device D(P1, P2, P3, P4, P5);
Rule r1(
	ON D:
		D STARTSWITH P1);
**/


/** COMPOSITE DEVICE **/
/**
Device D1(P1, P2, P3);
Device D2(P3, P4, P5);
Device D (D1, D2);
Rule r1(
	ON D:
		D STARTSWITH p1_1);
 **/

/***
Device D1_1(P1, P2, P3);
Device D1_2(P3, P4, P5);
Device D1 (D1_1, D1_2);
Device D2_1(P1, P2, P3);
Device D2_2(P3, P4, P5);
Device D2 (D2_1, D2_2);
Device D3_1(P1, P2, P3);
Device D3_2(P3, P4, P5);
Device D3 (D3_1, D2_2);
Device D (D1, D2);

for(num i=0; i<D.size(); i++) {
    Device X = D[i];
    println(i, ": ", X);
    
    Rule r1(
	    ON X:
			X STARTSWITH p1_1);
	
	Device[] lst = product(X, strict);
	save(lst);
}
**/

Rule r1(STARTSWITH p1_1);

Device D3(P1, P2, P3);
product(D3);

Device D4(P1, P1, P1);
product(D4);
