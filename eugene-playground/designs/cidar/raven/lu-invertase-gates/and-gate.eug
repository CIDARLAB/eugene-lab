/** AND GATE **/

Property Name(txt);
Property Sequence(txt);

Part Promoter(Name, Sequence);
Part RBS(Name, Sequence);
Part InvertaseSite(Name, Sequence);
Part Reporter(Name, Sequence);
Part Terminator(Name, Sequence);

// page 9 -- supplementary material
Promoter proD(.Name("proD"), .Sequence("CACAGCTAACACCACGTCGTCCCTATCTGCTGCCCTAGGTCTATGAGTGGTTGCTGGATAACTTTACGGGCATGCATAAGGCTCGTATAATATATTCAGGGAGACCACAACGGTTTCCCTCTACAAATAATTTTGTTTAACTTT"));
InvertaseSite Bxb1_attB(.Name("Bxb1_attB"), .Sequence("TCGGCCGGCTTGTCGACGACGGCGGTCTCCGTCGTCAGGATCATCCGGGC"));
InvertaseSite Bxb1_attP(.Name("Bxb1_attP"), .Sequence("GTCGTGGTTTGTCTGGTCAACCACCGCGGTCTCAGTGGTGTACGGTACAAACCCCGAC"));
InvertaseSite phiC31_attB(.Name("phiC31_attB"), .Sequence("TGCGGGTGCCAGGGCGTGCCCTTGGGCTCCCCGGGCGCGTACTCC"));
InvertaseSite phiC31_attP(.Name("phiC31_attP"), .Sequence("GTGCCCCAACTGGGGTAACCTTTGAGTTCTCTCAGTTGGGGG"));
RBS rbs(.Name("RBS"), .Sequence("GTGTGGCCGTCG"));
Reporter gfp(.Name("gfp"), .Sequence("ATGCGTAAAGGAGAAGAACTTTTCACTGGAGTTGTCCCAATTCTTGTTGAATTAGATGGTGATGTTAATGGGCACAAATTTTCTGTCAGTGGAGAGGGTGAAGGTGATGCAACATACGGAAAACTTACCCTTAAATTTATTTGCACTACTGGAAAACTACCTGTTCCATGGCCAACACTTGTCACTACTTTCGGTTATGGTGTTCAATGCTTTGCGAGATACCCAGATCATATGAAACAGCATGACTTTTTCAAGAGTGCCATGCCCGAAGGTTATGTACAGGAAAGAACTATATTTTTCAAAGATGACGGGAACTACAAGACACGTGCTGAAGTCAAGTTTGAAGGTGATACCCTTGTTAATAGAATCGAGTTAAAAGGTATTGATTTTAAAGAAGATGGAAACATTCTTGGACACAAATTGGAATACAACTATAACTCACACAATGTATACATCATGGCAGACAAACAAAAGAATGGAATCAAAGTTAACTTCAAAATTAGACACAACATTGAAGATGGAAGCGTTCAACTAGCAGACCATTATCAACAAAATACTCCAATTGGCGATGGCCCTGTCCTTTTACCAGACAACCATTACCTGTCCACACAATCTGCCCTTTCGAAAGATCCCAACGAAAAGAGAGACCACATGGTCCTTCTTGAGTTTGTAACAGCTGCTGGGATTACACATGGCATGGATGAACTATACAAATAA"));
Terminator T1(.Name("T1"), .Sequence("GGCATCAAATAAAACGAAAGGCTCAGTCGAAAGACTGGGCCTTTCGTTTTATCTGTTGTTTGTCGGTGAACGCTCTCCTGAGTAGGACAAATCCGCCGCCCTAGA"));

/* This is the published AND gate...
 * Device AND_gate1(proD, Bxb1_attB, T1, -Bxb1_attP, phiC31_attP, T1, -phiC31_attB, rbs, gfp, T1);
 */
// Q: can we define any rules that produce the published AND gate?
Device genericAnd(Promoter, InvertaseSite, Terminator, -InvertaseSite, InvertaseSite, Terminator, -InvertaseSite, RBS, Reporter, Terminator);

// now, let's define some Rules on positioning the Invertase Sites...
Rule r1(
	proD NEXTTO Bxb1_attB
//	AND
//	Bxb1_attB NOTMORETHAN 1
	AND
	Bxb1_attB BEFORE Bxb1_attP 
	AND
	Bxb1_attP BEFORE phiC31_attP 
	AND 
	Bxb1_attP NEXTTO phiC31_attP 
	AND
	phiC31_attB NEXTTO rbs
);

// finally, let's do some product
product(genericAnd, strict, 2);

